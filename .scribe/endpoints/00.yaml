name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/adminlogin
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: admin
      subgroupDescription: ''
      title: 'Log in a Admin.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'valid email address The email of the admin.'
        required: true
        example: tromp.sunny@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'min:8 The password of the admin.'
        required: true
        example: '1/;mQ?J_N],f6Xb'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: tromp.sunny@example.org
      password: '1/;mQ?J_N],f6Xb'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "token": "eyJhbGciOiAiSFMyNTYiLCJraWQiOiAiYWMwMDZmMDYtMGM0ZC00MTQ5LWE5MTYtYjEwYzQ2N2YzZmMwIn0.eyJqdGkiOiAibG9naW4tY29",
              "admin": {
             "name": "developer",
             "email": "example7pm@gmail.com",
             "full_name": "developer",
             "phone": "9998553040",
             "birthdate": null,
            "gender_type": 9,
             "city_type": null,
             "country_type": null,
             "address": null,
             "is_active": 1,
             "uuid": "c4dcce75-5b80-4ee7-af5e-6d7ce455ee5f",
            "profile_image": ""
               }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Failed to authenticate."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/email
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send a password reset link to the specified email address.'
      description: |-
        This endpoint sends a password reset link to the provided email address.
        If successful, it returns a JSON response with a success message and status true.
        If unsuccessful, it returns a JSON response with an error message and status false.

        Request:
        - email: Required email address to send the reset link.

        Response (Success):
        {
            "message": "Reset link sent to your email.",
            "status": true
        }

        Response (Failure):
        {
            "message": "Unable to send reset link.",
            "status": false
        }
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: boyer.roxane@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: boyer.roxane@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/password/reset
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Reset the user's password."
      description: |-
        This endpoint resets the password of the user with the provided token and email address.
        If successful, it returns a JSON response with a success message and status true.
        If unsuccessful, it returns a JSON response with an error message and status false.

        Request:
        - token: Required token for password reset.
        - email: Required email address of the user.
        - password: Required new password for the user (confirmed with password_confirmation).

        Response (Success):
        {
            "message": "Password has been reset.",
            "status": true
        }

        Response (Failure):
        {
            "message": "Unable to reset password.",
            "status": false
        }
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: ''
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: randal.weissnat@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: fugiat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      token: eveniet
      email: randal.weissnat@example.net
      password: fugiat
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
